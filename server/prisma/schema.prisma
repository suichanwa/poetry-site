datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  name       String    
  password   String
  avatar     String?
  bio        String?
  poems      Poem[]
  comments   Comment[]
  likes      Like[]
  bookmarks  Bookmark[]
  followers  Follow[]   @relation("followers")
  following  Follow[]   @relation("following")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Follow {
  id          Int      @id @default(autoincrement())
  follower    User     @relation("following", fields: [followerId], references: [id])
  followerId  Int
  following   User     @relation("followers", fields: [followingId], references: [id])
  followingId Int
  createdAt   DateTime @default(now())

  @@unique([followerId, followingId])
}

model Poem {
  id         Int        @id @default(autoincrement())
  title      String
  content    String
  author     User       @relation(fields: [authorId], references: [id])
  authorId   Int
  comments   Comment[]
  likes      Like[]
  bookmarks  Bookmark[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  poem      Poem     @relation(fields: [poemId], references: [id])
  poemId    Int
  likes     Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  poem      Poem?    @relation(fields: [poemId], references: [id])
  poemId    Int?
  comment   Comment? @relation(fields: [commentId], references: [id])
  commentId Int?
  createdAt DateTime @default(now())
}

model Bookmark {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  poem      Poem     @relation(fields: [poemId], references: [id])
  poemId    Int
  createdAt DateTime @default(now())

  @@unique([userId, poemId])
}